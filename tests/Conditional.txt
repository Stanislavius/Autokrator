#TESTCASE
#<
5 == 5
#>
#output = 1
#commentary = comparison testing
#title = comparison.1
#_______________________________________________________________
#TESTCASE
#<
5 == 3
#>
#output = 0
#commentary = comparison testing
#title = comparison.2
#_______________________________________________________________
#TESTCASE
#<
4 == 5 == 0
#>
#<parsingOutput
#((4==5)==0)
#>parsingOutput
#output = 1
#commentary = comparison testing
#title = comparison.3
#_______________________________________________________________
#TESTCASE
#<
if 4 == 4
    32
#>
#<lexingOutput
#BLOCKWORD if 1 1
#INT 4 1 4
#OPERATION == 1 6
#INT 4 1 9
#NEWLINE  1 9
#INDENTATION 	 2 4
#INT 32 2 5
#NEWLINE  2 6
#>lexingOutput
#<parsingOutput
#if (4==4)
#\t1 32
#>parsingOutput
#output = 32
#commentary = true condition
#title = if.1
#_______________________________________________________________
#TESTCASE
#<
if 4 == 5
    32
#>
#output = void
#title = if.2
#commentary = false condition
#_______________________________________________________________
#TESTCASE
#<
a = 5
if a == 5
    1
elif a == 4
    2
elif a == 23
    3
else
    4
#>
#output = 1
#title = if.3
#commentary = if elif else testing
#_______________________________________________________________
#TESTCASE
#<
a = 4
if a == 5
    1
elif a == 4
    2
elif a == 23
    3
else
    4
#>
#output = 2
#title = if.4
#commentary = if elif else testing
#_______________________________________________________________
#TESTCASE
#<
a = 23
if a == 5
    1
elif a == 4
    2
elif a == 23
    3
else
    4
#>
#output = 3
#title = if.5
#commentary = if elif else testing
#_______________________________________________________________
#TESTCASE
#<
a = 231
if a == 5
    1
elif a == 4
    2
elif a == 23
    3
else
    4
#>
#output = 4
#title = if.6
#commentary = if elif else testing
#_______________________________________________________________
#TESTCASE
#<
a = 10
if a > 5
    if a > 6
        0
    elif a == 6
        1
    else
        2
elif a == 1
    3
#>
#output = 0
#title = if.7
#commentary = if inside if
#_______________________________________________________________
#TESTCASE
#<
a = 6
if a > 5
    if a > 6
        0
    elif a == 6
        1
    else
        2
elif a == 1
    3
#>
#output = 1
#title = if.8
#commentary = if inside if
#_______________________________________________________________
#TESTCASE
#<
a = 5
if a > 5
    if a > 6
        0
    elif a == 6
        1
    else
        2
elif a == 1
    3
#>
#output = void
#title = if.9
#commentary = if inside if
#_______________________________________________________________
#TESTCASE
#<
a = 1
if a > 5
    if a > 6
        0
    elif a == 6
        1
    else
        2
elif a == 1
    3
#>
#output = 3
#title = if.10
#commentary = if inside if
#_______________________________________________________________
#TESTCASE
#<
a = 2
if a > 5
    if a > 6
        0
    elif a == 6
        1
    else
        2
elif a == 1
    3
else
    10
#>
#<parsingOutput
#a=2
#if (a>5)
#\t1 if (a>6)
#\t2 0
#\t1 elif (a==6)
#\t2 1
#\t1 else
#\t2 2
#elif (a==1)
#\t1 3
#else
#\t1 10
#>parsingOutput
#output = 10
#title = if.11
#commentary = if inside if
#_______________________________________________________________
#TESTCASE
#<
a = 2
while a < 10
    a = a + 1
a
#>
#<parsingOutput
#a=2
#while (a<10)
#\t1 a=(a+1)
#a
#>parsingOutput
#output = 10
#title = while.1
#commentary = while
#_______________________________________________________________
#TESTCASE
#<
a = 2
while a < 10
    a = a + 1
else
    a = a + 5
a
#>
#output = 15
#title = while.2
#commentary = while with else
#_______________________________________________________________
#TESTCASE
#<
a = 2
if a > 0
    if a < 10
        if a == 8
            8
        elif a == 9
            9
        else
            if a == 4
                4
            if a > 1
                2
    elif a == 10
        a
#>
#output = 2
#title = while.3
#commentary = many nested if
#_______________________________________________________________
#TESTCASE
#<
5 > 1
#>
#output = 1
#commentary = should __greater__ in int
#title = comparison_int_gt
#_______________________________________________________________
#TESTCASE
#<
5 < 1
#>
#output = 0
#commentary = should __lt__ in int
#title = comparison_int_lt
#_______________________________________________________________
#TESTCASE
#<
5.0 == 5.0
#>
#output = 1
#commentary = should call __eq__ for int
#title = comparison_float_eq
#_______________________________________________________________
#TESTCASE
#<
5.0 == "5.0"
#>
#output = 0
#commentary = should allow to compare different types
#title = comparison_float_str
#_______________________________________________________________
#TESTCASE
#<
class val
    def __init__(self, v)
        self.v = 4

a1 = val(4)
a2 = val(5)
a1 == a2
#>
#output = 0
#commentary = should allow to compare objects
#title = comparison_objects.1
#_______________________________________________________________
#TESTCASE
#<
class val
    def __init__(self, v)
        self.v = 4

a1 = val(4)
a2 = val(4)
a1 == a2
#>
#output = 0
#commentary = should allow to compare objects
#title = comparison_objects.2
#_______________________________________________________________
#TESTCASE
#<
class val
    def __init__(self, v)
        self.v = v
    def __eq__(self, other)
        self.v == other.v
a1 = val(4)
a2 = val(4)
a1 == a2
#>
#output = 1
#commentary = should allow to compare objects
#title = comparison_objects.3
#_______________________________________________________________
#TESTCASE
#<
class val
    def __init__(self, v)
        self.v = v
    def __eq__(self, other)
        self.v == other.v
a1 = val(4)
a2 = val(6)
a1 == a2
#>
#output = 0
#commentary = should allow to compare objects
#title = comparison_objects.4
#_______________________________________________________________
#TESTCASE
#<
a = [2, 4, 5]
b = [2, 3, 4]
a == b
#>
#output = 0
#commentary = should allow to compare objects
#title = comparison_objects.5
#_______________________________________________________________
#TESTCASE
#<
a = [2, 4, 5]
b = [2, 4, 5]
a == b
#>
#output = 1
#commentary = should allow to compare objects
#title = comparison_objects.6
#_______________________________________________________________
#TESTCASE
#<
a = {1:2, 3:4}
b = {1:2, 3:4}
a == b
#>
#output = 1
#commentary = should allow to compare objects
#title = comparison_objects.7
#_______________________________________________________________
#TESTCASE
#<
a = {1:2, 3:6}
b = {1:2, 3:4}
a == b
#>
#output = 0
#commentary = should allow to compare objects
#title = comparison_objects.8
#_______________________________________________________________
#TESTCASE
#<
class c
    def __init__(self, a)
        self.a = 4
    def __eq__(self, other)
        self.a == other
obj = c(4)
obj == 4
#>
#output = 1
#commentary = should allow to compare objects
#title = comparison_objects.9
#_______________________________________________________________
#TESTCASE
#<
class c
    def __init__(self, a)
        self.a = 4
obj = c(4)
obj == obj
#>
#output = 1
#commentary = should allow to compare objects
#title = comparison_objects.10
#_______________________________________________________________