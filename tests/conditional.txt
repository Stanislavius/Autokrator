#TESTCASE
#<
5 == 5
#>
#output = 1
#commentary = comparison testing
#_______________________________________________________________
#TESTCASE
#<
5 == 3
#>
#output = 0
#commentary = comparison testing
#_______________________________________________________________
#TESTCASE
#<
if 4 == 4
    32
#>
#output = 32
#commentary = true condition
#_______________________________________________________________
#TESTCASE
#<
if 4 == 5
    32
#>
#output = void
#commentary = false condition
#_______________________________________________________________
#TESTCASE
#<
a = 5
if a == 5
    1
elif a == 4
    2
elif a == 23
    3
else
    4
#>
#output = 1
#commentary = if elif else testing
#_______________________________________________________________
#TESTCASE
#<
a = 4
if a == 5
    1
elif a == 4
    2
elif a == 23
    3
else
    4
#>
#output = 2
#commentary = if elif else testing
#_______________________________________________________________
#TESTCASE
#<
a = 23
if a == 5
    1
elif a == 4
    2
elif a == 23
    3
else
    4
#>
#output = 3
#commentary = if elif else testing
#_______________________________________________________________
#TESTCASE
#<
a = 231
if a == 5
    1
elif a == 4
    2
elif a == 23
    3
else
    4
#>
#output = 4
#commentary = if elif else testing
#_______________________________________________________________
#TESTCASE
#<
a = 10
if a > 5
    if a > 6
        0
    elif a == 6
        1
    else
        2
elif a == 1
    3
#>
#output = 0
#commentary = if inside if
#_______________________________________________________________
#TESTCASE
#<
a = 6
if a > 5
    if a > 6
        0
    elif a == 6
        1
    else
        2
elif a == 1
    3
#>
#output = 1
#commentary = if inside if
#_______________________________________________________________
#TESTCASE
#<
a = 5
if a > 5
    if a > 6
        0
    elif a == 6
        1
    else
        2
elif a == 1
    3
#>
#output = void
#commentary = if inside if
#_______________________________________________________________
#TESTCASE
#<
a = 1
if a > 5
    if a > 6
        0
    elif a == 6
        1
    else
        2
elif a == 1
    3
#>
#output = 3
#commentary = if inside if
#_______________________________________________________________
#TESTCASE
#<
a = 2
if a > 5
    if a > 6
        0
    elif a == 6
        1
    else
        2
elif a == 1
    3
else
    10
#>
#output = 10
#commentary = if inside if
#_______________________________________________________________
#TESTCASE
#<
a = 2
while a < 10
    a = a + 1
a
#>
#output = 10
#commentary = while
#_______________________________________________________________
#TESTCASE
#<
a = 2
while a < 10
    a = a + 1
else
    a = a + 5
a
#>
#output = 15
#commentary = while with else
#_______________________________________________________________
#TESTCASE
#<
a = 2
if a > 0
    if a < 10
        if a == 8
            8
        elif a == 9
            9
        else
            if a == 4
                4
            if a > 1
                2
    elif a == 10
        a
#>
#output = 2
#commentary = many nested if
#_______________________________________________________________
#TESTCASE
#<
5 > 1
#>
#output = 1
#commentary = should __greater__ in int
#title = comparison_int_gt
#_______________________________________________________________
#TESTCASE
#<
5 > 1
#>
#output = 0
#commentary = should __gt__ in int
#title = comparison_int_lt
#_______________________________________________________________
#TESTCASE
#<
5.0 == 5.0
#>
#output = 1
#commentary = should call __eq__ for int
#title = comparison_float_eq
#_______________________________________________________________
#TESTCASE
#<
5.0 == "5.0"
#>
#output = 0
#commentary = should allow to compare different types
#title = comparison_float_str
#_______________________________________________________________
#TESTCASE
#<
class val
    def __init__(self, v)
        self.v = 4

a1 = val(4)
a2 = val(5)
a1 == a2
#>
#output = 0
#commentary = should allow to compare objects
#title = comparison_objects.1
#_______________________________________________________________
#TESTCASE
#<
class val
    def __init__(self, v)
        self.v = 4

a1 = val(4)
a2 = val(4)
a1 == a2
#>
#output = 1
#commentary = should allow to compare objects
#title = comparison_objects.2
#_______________________________________________________________