#TESTCASE
#<
str(1)
#>
#output = "1"
#title = BuiltIn.str.1
#_______________________________________________________________
#TESTCASE
#<
str(1.4)
#>
#output = "1.4"
#title = BuiltIn.str.2
#_______________________________________________________________
#TESTCASE
#<
str("sa")
#>
#output = "sa"
#title = BuiltIn.str.3
#_______________________________________________________________
#TESTCASE
#<
s = "sa"
c = s.__class__
str(c)
#>
#output = "<type str>"
#title = BuiltIn.str.4
#_______________________________________________________________
#TESTCASE
#<
class c
    def __init__(self, a)
        self.a = a
    def some_func(self)
        4
obj = c(4)
obj.some_func
#>
#output = <BoundMethod some_func for object of <class c>>
#title = BuiltIn.str.5
#_______________________________________________________________
#TESTCASE
#<
l = [1, 2, 3, 4, 5]
str(l)
#>
#output = "[1, 2, 3, 4, 5]"
#title = BuiltIn.str.6
#_______________________________________________________________
#TESTCASE
#<
l = {1:2}
str(l)
#>
#output = "{1:2}"
#title = BuiltIn.str.7
#_______________________________________________________________
#TESTCASE
#<
v = 4
v = v.__class__
str(v)
#>
#output = "<type int>"
#title = BuiltIn.str.8
#_______________________________________________________________
#TESTCASE
#<
v = 4.4
v = v.__class__
str(v)
#>
#output = "<type float>"
#title = BuiltIn.str.9
#_______________________________________________________________
#TESTCASE
#<
v = [1, 2, 3, 4, 5]
v = v.__class__
str(v)
#>
#output = "<type list>"
#title = BuiltIn.str.10
#_______________________________________________________________
#TESTCASE
#<
v = {1:2, 3:4}
v = v.__class__
str(v)
#>
#output = "<type dict>"
#title = BuiltIn.str.11
#_______________________________________________________________
#TESTCASE
#<
abs({43:4})
#>
#output = BadArgumentType: 1 4
#title = BuiltIn.abs.1
#_______________________________________________________________
#TESTCASE
#<
abs([43:4])
#>
#output = BadArgumentType: 1 4
#title = BuiltIn.abs.2
#_______________________________________________________________
#TESTCASE
#<
abs(1)
#>
#output = 1
#title = BuiltIn.abs.3
#_______________________________________________________________
#TESTCASE
#<
abs(1.1)
#>
#output = 1.1
#title = BuiltIn.abs.4
#_______________________________________________________________
#TESTCASE
#<
abs(-1.1)
#>
#output = 1.1
#title = BuiltIn.abs.5
#_______________________________________________________________
#TESTCASE
#<
abs(-1)
#>
#output = 1
#title = BuiltIn.abs.6
#_______________________________________________________________
#TESTCASE
#<
abs("43543")
#>
#output = BadArgumentType: 1 4
#title = BuiltIn.abs.7
#_______________________________________________________________
#TESTCASE
#<
class c
    def __init__(self, a)
        self.a = a
    def __abs__(self)
        abs(self.a)
obj = c(-4)
abs(obj)
#>
#output = 4
#title = BuiltIn.abs.8
#_______________________________________________________________
#TESTCASE
#<
class c
    def __init__(self, a)
        self.a = a
    def __abs__(self)
        c(abs(self.a))
obj = c(-4)
abs(obj).a
#>
#output = 4
#title = BuiltIn.abs.9
#_______________________________________________________________
#TESTCASE
#<
class c
    def __init__(self, a)
        self.a = a
    def __abs__(self)
        abs(self.a)
obj = c(-4)
abs(obj)
#>
#output = 4
#title = BuiltIn.abs.9
#_______________________________________________________________
#TESTCASE
#<
len(3)
#>
#output = BadArgumentType: 1 4
#title = BuiltIn.len.1
#_______________________________________________________________
#TESTCASE
#<
len(3.3)
#>
#output = BadArgumentType: 1 4
#title = BuiltIn.len.2
#_______________________________________________________________
#TESTCASE
#<
len("543")
#>
#output = 3
#title = BuiltIn.len.3
#_______________________________________________________________
#TESTCASE
#<
len([43, 4, 5, 6])
#>
#output = 4
#title = BuiltIn.len.4
#_______________________________________________________________
#TESTCASE
#<
len({4:4, 5:4})
#>
#output = 2
#title = BuiltIn.len.5
#_______________________________________________________________
#TESTCASE
#<
type(5)
#>
#output = int
#title = BuiltIn.type.1
#_______________________________________________________________
#TESTCASE
#<
type(5.5)
#>
#output = float
#title = BuiltIn.type.2
#_______________________________________________________________
#TESTCASE
#<
type("5")
#>
#output = str
#title = BuiltIn.type.3
#_______________________________________________________________
#TESTCASE
#<
def func(val)
    val = 4

val = func(4)
type(val)
#>
#output = void
#title = BuiltIn.type.4
#_______________________________________________________________
#TESTCASE
#<
def func(val)
    val = 4

val = func(4)
type(type(val))
#>
#output = type
#title = BuiltIn.type.5
#_______________________________________________________________
#TESTCASE
#<
val = 4
type(type(val))
#>
#output = type
#title = BuiltIn.type.6
#_______________________________________________________________

